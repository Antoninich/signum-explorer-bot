// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/users/callbackdata/datatype.proto

package callbackdata

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KeyboardType int32

const (
	KeyboardType_KT_NULL          KeyboardType = 0
	KeyboardType_KT_ACCOUNT       KeyboardType = 1
	KeyboardType_KT_PRICE_CHART   KeyboardType = 2
	KeyboardType_KT_NETWORK_CHART KeyboardType = 3
	KeyboardType_KT_CALC          KeyboardType = 4
)

var KeyboardType_name = map[int32]string{
	0: "KT_NULL",
	1: "KT_ACCOUNT",
	2: "KT_PRICE_CHART",
	3: "KT_NETWORK_CHART",
	4: "KT_CALC",
}

var KeyboardType_value = map[string]int32{
	"KT_NULL":          0,
	"KT_ACCOUNT":       1,
	"KT_PRICE_CHART":   2,
	"KT_NETWORK_CHART": 3,
	"KT_CALC":          4,
}

func (x KeyboardType) String() string {
	return proto.EnumName(KeyboardType_name, int32(x))
}

func (KeyboardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18009145167ae7f1, []int{0}
}

type ActionType int32

const (
	ActionType_AT_NULL                           ActionType = 0
	ActionType_AT_REFRESH                        ActionType = 1
	ActionType_AT_PAYMENTS                       ActionType = 2
	ActionType_AT_MULTI_OUT                      ActionType = 3
	ActionType_AT_MULTI_OUT_SAME                 ActionType = 4
	ActionType_AT_BLOCKS                         ActionType = 5
	ActionType_AT_BACK                           ActionType = 6
	ActionType_AT_NEXT                           ActionType = 7
	ActionType_AT_PREV                           ActionType = 8
	ActionType_AT_ENABLE_INCOME_TX_NOTIFY        ActionType = 9
	ActionType_AT_DISABLE_INCOME_TX_NOTIFY       ActionType = 10
	ActionType_AT_ENABLE_BLOCK_NOTIFY            ActionType = 11
	ActionType_AT_DISABLE_BLOCK_NOTIFY           ActionType = 12
	ActionType_AT_ENABLE_OUTGO_TX_NOTIFY         ActionType = 13
	ActionType_AT_DISABLE_OUTGO_TX_NOTIFY        ActionType = 14
	ActionType_AT_PRICE_CHART_1_DAY              ActionType = 15
	ActionType_AT_PRICE_CHART_1_WEEK             ActionType = 16
	ActionType_AT_PRICE_CHART_1_MONTH            ActionType = 17
	ActionType_AT_PRICE_CHART_ALL                ActionType = 18
	ActionType_AT_NETWORK_CHART_1_MONTH          ActionType = 19
	ActionType_AT_NETWORK_CHART_ALL              ActionType = 20
	ActionType_AT_OTHER_TXS                      ActionType = 21
	ActionType_AT_ENABLE_OTHER_TX_NOTIFICATIONS  ActionType = 22
	ActionType_AT_DISABLE_OTHER_TX_NOTIFICATIONS ActionType = 23
	ActionType_AT_CALC_TIB                       ActionType = 24
	ActionType_AT_CALC_TB                        ActionType = 25
)

var ActionType_name = map[int32]string{
	0:  "AT_NULL",
	1:  "AT_REFRESH",
	2:  "AT_PAYMENTS",
	3:  "AT_MULTI_OUT",
	4:  "AT_MULTI_OUT_SAME",
	5:  "AT_BLOCKS",
	6:  "AT_BACK",
	7:  "AT_NEXT",
	8:  "AT_PREV",
	9:  "AT_ENABLE_INCOME_TX_NOTIFY",
	10: "AT_DISABLE_INCOME_TX_NOTIFY",
	11: "AT_ENABLE_BLOCK_NOTIFY",
	12: "AT_DISABLE_BLOCK_NOTIFY",
	13: "AT_ENABLE_OUTGO_TX_NOTIFY",
	14: "AT_DISABLE_OUTGO_TX_NOTIFY",
	15: "AT_PRICE_CHART_1_DAY",
	16: "AT_PRICE_CHART_1_WEEK",
	17: "AT_PRICE_CHART_1_MONTH",
	18: "AT_PRICE_CHART_ALL",
	19: "AT_NETWORK_CHART_1_MONTH",
	20: "AT_NETWORK_CHART_ALL",
	21: "AT_OTHER_TXS",
	22: "AT_ENABLE_OTHER_TX_NOTIFICATIONS",
	23: "AT_DISABLE_OTHER_TX_NOTIFICATIONS",
	24: "AT_CALC_TIB",
	25: "AT_CALC_TB",
}

var ActionType_value = map[string]int32{
	"AT_NULL":                           0,
	"AT_REFRESH":                        1,
	"AT_PAYMENTS":                       2,
	"AT_MULTI_OUT":                      3,
	"AT_MULTI_OUT_SAME":                 4,
	"AT_BLOCKS":                         5,
	"AT_BACK":                           6,
	"AT_NEXT":                           7,
	"AT_PREV":                           8,
	"AT_ENABLE_INCOME_TX_NOTIFY":        9,
	"AT_DISABLE_INCOME_TX_NOTIFY":       10,
	"AT_ENABLE_BLOCK_NOTIFY":            11,
	"AT_DISABLE_BLOCK_NOTIFY":           12,
	"AT_ENABLE_OUTGO_TX_NOTIFY":         13,
	"AT_DISABLE_OUTGO_TX_NOTIFY":        14,
	"AT_PRICE_CHART_1_DAY":              15,
	"AT_PRICE_CHART_1_WEEK":             16,
	"AT_PRICE_CHART_1_MONTH":            17,
	"AT_PRICE_CHART_ALL":                18,
	"AT_NETWORK_CHART_1_MONTH":          19,
	"AT_NETWORK_CHART_ALL":              20,
	"AT_OTHER_TXS":                      21,
	"AT_ENABLE_OTHER_TX_NOTIFICATIONS":  22,
	"AT_DISABLE_OTHER_TX_NOTIFICATIONS": 23,
	"AT_CALC_TIB":                       24,
	"AT_CALC_TB":                        25,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}

func (ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18009145167ae7f1, []int{1}
}

type QueryDataType struct {
	MessageId            int64        `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Account              string       `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Keyboard             KeyboardType `protobuf:"varint,3,opt,name=keyboard,proto3,enum=callbackdata.KeyboardType" json:"keyboard,omitempty"`
	Action               ActionType   `protobuf:"varint,4,opt,name=action,proto3,enum=callbackdata.ActionType" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryDataType) Reset()         { *m = QueryDataType{} }
func (m *QueryDataType) String() string { return proto.CompactTextString(m) }
func (*QueryDataType) ProtoMessage()    {}
func (*QueryDataType) Descriptor() ([]byte, []int) {
	return fileDescriptor_18009145167ae7f1, []int{0}
}

func (m *QueryDataType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDataType.Unmarshal(m, b)
}
func (m *QueryDataType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDataType.Marshal(b, m, deterministic)
}
func (m *QueryDataType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDataType.Merge(m, src)
}
func (m *QueryDataType) XXX_Size() int {
	return xxx_messageInfo_QueryDataType.Size(m)
}
func (m *QueryDataType) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDataType.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDataType proto.InternalMessageInfo

func (m *QueryDataType) GetMessageId() int64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *QueryDataType) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *QueryDataType) GetKeyboard() KeyboardType {
	if m != nil {
		return m.Keyboard
	}
	return KeyboardType_KT_NULL
}

func (m *QueryDataType) GetAction() ActionType {
	if m != nil {
		return m.Action
	}
	return ActionType_AT_NULL
}

func init() {
	proto.RegisterEnum("callbackdata.KeyboardType", KeyboardType_name, KeyboardType_value)
	proto.RegisterEnum("callbackdata.ActionType", ActionType_name, ActionType_value)
	proto.RegisterType((*QueryDataType)(nil), "callbackdata.QueryDataType")
}

func init() {
	proto.RegisterFile("internal/users/callbackdata/datatype.proto", fileDescriptor_18009145167ae7f1)
}

var fileDescriptor_18009145167ae7f1 = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcf, 0x6e, 0xda, 0x40,
	0x10, 0xc6, 0xeb, 0x84, 0x26, 0x61, 0x42, 0xc8, 0x66, 0x0a, 0xc4, 0x90, 0xa6, 0xa5, 0x55, 0x2b,
	0x21, 0x0e, 0xd0, 0x3f, 0x52, 0xef, 0x8b, 0xd9, 0x14, 0xcb, 0xc6, 0xa6, 0xf6, 0xd0, 0xc0, 0x69,
	0x65, 0xc0, 0xaa, 0x50, 0x28, 0x20, 0x30, 0x07, 0x5e, 0xab, 0xaf, 0xd6, 0x17, 0xa8, 0x4c, 0x96,
	0x60, 0x68, 0x2e, 0x96, 0x76, 0x7e, 0xf3, 0xcd, 0x37, 0xa3, 0x19, 0x43, 0x75, 0x3c, 0x8d, 0xc2,
	0xc5, 0x34, 0x98, 0xd4, 0x57, 0xcb, 0x70, 0xb1, 0xac, 0x0f, 0x83, 0xc9, 0x64, 0x10, 0x0c, 0x1f,
	0x46, 0x41, 0x14, 0xd4, 0xe3, 0x4f, 0xb4, 0x9e, 0x87, 0xb5, 0xf9, 0x62, 0x16, 0xcd, 0x30, 0x93,
	0x84, 0xef, 0xff, 0x68, 0x70, 0xf1, 0x63, 0x15, 0x2e, 0xd6, 0xcd, 0x20, 0x0a, 0x68, 0x3d, 0x0f,
	0xf1, 0x16, 0xe0, 0x77, 0xb8, 0x5c, 0x06, 0xbf, 0x42, 0x39, 0x1e, 0xe9, 0x5a, 0x59, 0xab, 0x1c,
	0x7b, 0x69, 0x15, 0x31, 0x47, 0xa8, 0xc3, 0x69, 0x30, 0x1c, 0xce, 0x56, 0xd3, 0x48, 0x3f, 0x2a,
	0x6b, 0x95, 0xb4, 0xb7, 0x7d, 0xe2, 0x37, 0x38, 0x7b, 0x08, 0xd7, 0x83, 0x59, 0xb0, 0x18, 0xe9,
	0xc7, 0x65, 0xad, 0x92, 0xfd, 0x52, 0xaa, 0x25, 0xbd, 0x6a, 0x96, 0xa2, 0xb1, 0x8d, 0xf7, 0x94,
	0x8b, 0x9f, 0xe0, 0x24, 0x18, 0x46, 0xe3, 0xd9, 0x54, 0x4f, 0x6d, 0x54, 0xfa, 0xbe, 0x8a, 0x6f,
	0xd8, 0x46, 0xa3, 0xf2, 0xaa, 0x03, 0xc8, 0x24, 0x6b, 0xe1, 0x39, 0x9c, 0x5a, 0x24, 0x9d, 0xae,
	0x6d, 0xb3, 0x17, 0x98, 0x05, 0xb0, 0x48, 0x72, 0xc3, 0x70, 0xbb, 0x0e, 0x31, 0x0d, 0x11, 0xb2,
	0x16, 0xc9, 0x8e, 0x67, 0x1a, 0x42, 0x1a, 0x2d, 0xee, 0x11, 0x3b, 0xc2, 0x1c, 0xb0, 0x58, 0x20,
	0xe8, 0xde, 0xf5, 0x2c, 0x15, 0x3d, 0x56, 0x65, 0x0c, 0x6e, 0x1b, 0x2c, 0x55, 0xfd, 0x9b, 0x02,
	0xd8, 0x59, 0xc7, 0x8c, 0x27, 0x2d, 0x38, 0x49, 0x4f, 0xdc, 0x79, 0xc2, 0x6f, 0x31, 0x0d, 0x2f,
	0xe1, 0x9c, 0x93, 0xec, 0xf0, 0x7e, 0x5b, 0x38, 0xe4, 0xb3, 0x23, 0x64, 0x90, 0xe1, 0x24, 0xdb,
	0x5d, 0x9b, 0x4c, 0xe9, 0x76, 0xe3, 0xda, 0x79, 0xb8, 0x4a, 0x46, 0xa4, 0xcf, 0xdb, 0x82, 0xa5,
	0xf0, 0x02, 0xd2, 0x9c, 0x64, 0xc3, 0x76, 0x0d, 0xcb, 0x67, 0x2f, 0x95, 0x4b, 0x83, 0x1b, 0x16,
	0x3b, 0xd9, 0x5a, 0x8a, 0x1e, 0xb1, 0x53, 0xf5, 0xe8, 0x78, 0xe2, 0x27, 0x3b, 0xc3, 0x37, 0x50,
	0xe2, 0x24, 0x85, 0xc3, 0x1b, 0xb6, 0x90, 0xa6, 0x63, 0xb8, 0x6d, 0x21, 0xa9, 0x27, 0x1d, 0x97,
	0xcc, 0xbb, 0x3e, 0x4b, 0xe3, 0x5b, 0xb8, 0xe1, 0x24, 0x9b, 0xa6, 0xff, 0x7c, 0x02, 0x60, 0x09,
	0x0a, 0xbb, 0x02, 0x1b, 0xf7, 0x2d, 0x3b, 0xc7, 0x1b, 0xb8, 0x4e, 0x88, 0xf7, 0x60, 0x06, 0x6f,
	0xa1, 0xb8, 0x13, 0xba, 0x5d, 0xfa, 0xee, 0x26, 0xea, 0x5e, 0xa8, 0xc6, 0xb6, 0xda, 0x43, 0x9e,
	0x45, 0x1d, 0x72, 0x7c, 0x6f, 0x17, 0xf2, 0xb3, 0x6c, 0xf2, 0x3e, 0xbb, 0xc4, 0x22, 0xe4, 0xff,
	0x23, 0xf7, 0x42, 0x58, 0x8c, 0xa9, 0x66, 0xf7, 0x51, 0xdb, 0x75, 0xa8, 0xc5, 0xae, 0xb0, 0x00,
	0x78, 0xc0, 0xb8, 0x6d, 0x33, 0xc4, 0xd7, 0xa0, 0xf3, 0x83, 0x05, 0x3f, 0xa9, 0x5e, 0xa9, 0x36,
	0xf6, 0x69, 0xac, 0xcb, 0xa9, 0xc5, 0xb9, 0xd4, 0x12, 0x9e, 0xa4, 0x9e, 0xcf, 0xf2, 0xf8, 0x01,
	0xca, 0x89, 0x89, 0x15, 0x78, 0x9c, 0xc8, 0x34, 0x38, 0x99, 0xae, 0xe3, 0xb3, 0x02, 0x7e, 0x84,
	0x77, 0xc9, 0xc1, 0x9f, 0x4f, 0xbb, 0x56, 0x87, 0x12, 0x5f, 0x98, 0x24, 0xb3, 0xc1, 0x74, 0x75,
	0x49, 0x8f, 0x81, 0x06, 0x2b, 0x0e, 0x4e, 0x36, 0xff, 0xe8, 0xd7, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xc8, 0x61, 0x60, 0x1c, 0xd1, 0x03, 0x00, 0x00,
}
